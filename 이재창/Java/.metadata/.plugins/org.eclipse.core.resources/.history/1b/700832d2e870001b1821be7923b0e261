import java.util.Scanner;

import jssc.SerialPort;
import jssc.SerialPortException;
import jssc.SerialPortList;

public class SerialMain3 {
	public static final String ADMIN_ID = "admin";
	public static final String GUEST_ID = "guest";
	public static final String ADMIN_PW = "1234";
	public static final String GUEST_PW = "1111";
	public static final String ADMIN_MODE = "admin_mode";
	public static final String GUEST_MODE = "guest_mode";
	public static final String OTHER_MODE = "other_mode";
	
	public static final int MENU_TV_ON = 1;
	public static final int MENU_TV_OFF = 2;
	public static final int MENU_HEATER_ON = 3;
	public static final int MENU_CLEANER_ON = 4;
	public static final int MENU_GUEST_LOGOUT = 5;
	public static final int MENU_ADMIN_LOGOUT = 6;
	public static final int MENU_GUEST_EXIT = 6;
	public static final int MENU_ADMIN_EXIT = 7;
	public static final int MENU_EMARGENCY = 5;
	
	static final int CMD_TV_ON 		= '1';
	static final int CMD_TV_OFF 	= '0';
	static final int CMD_HEATER_ON 	= '2';
	static final int CMD_CLEANER_ON = '3';
	
	public static SerialPort initSerial() {
		String[] portNames = SerialPortList.getPortNames();
		for (int i = 0; i < portNames.length; i++) {
			System.out.println(portNames[i]);
		}
		SerialPort serialPort = 
				new SerialPort(portNames[0]);
		
		try {
			serialPort.openPort();
			serialPort.setParams(SerialPort.BAUDRATE_9600, 
					SerialPort.DATABITS_8, SerialPort.STOPBITS_1,
					SerialPort.PARITY_NONE);
		} catch (SerialPortException e) {
			e.printStackTrace();
		}
		return serialPort;
	}

	public static String login(Scanner s) {
		System.out.println("-----------------");
		System.out.println("�뒪留덊듃�솃 �젣�뼱 濡쒓렇�씤");
		System.out.println("-----------------");
		System.out.print("ID: ");
		String id = s.next();
		System.out.print("PW: ");
		String passwd = s.next();
		String mode;

		if (id.equals(ADMIN_ID) && 
			passwd.equals(ADMIN_PW)) {
			mode = ADMIN_MODE;
		} else if (id.equals(GUEST_ID) && 
			passwd.equals(GUEST_PW)) {
			mode = GUEST_MODE;
		} else {
			mode = OTHER_MODE;
		}
		return mode;
	}
	
	public static int adminMenu(Scanner s) {
		System.out.println("------------------");
		System.out.println("�뒪留덊듃�솃 �젣�뼱 愿�由ъ옄");
		System.out.println("------------------");
		System.out.println("1.TV 耳쒓린");
		System.out.println("2.TV �걚湲�");
		System.out.println("3.蹂댁씪�윭 �룞�옉");
		System.out.println("4.�꽭�긽湲� �룞�옉");
		System.out.println("5.湲닿툒 �젙吏�");
		System.out.println("6.濡쒓렇�븘�썐");
		System.out.println("7.醫낅즺");
		System.out.println("------------------");
		System.out.print("硫붾돱 �꽑�깮: ");
		return s.nextInt();
	}
	
	public static int guestMenu(Scanner s) {
		System.out.println("------------------");
		System.out.println("�뒪留덊듃�솃 �젣�뼱 �궗�슜�옄");
		System.out.println("------------------");
		System.out.println("1.TV 耳쒓린");
		System.out.println("2.TV �걚湲�");
		System.out.println("3.蹂댁씪�윭 �룞�옉");
		System.out.println("4.�꽭�긽湲� �룞�옉");
		System.out.println("5.濡쒓렇 �븘�썐");
		System.out.println("6.醫낅즺");
		System.out.println("------------------");
		System.out.print("硫붾돱 �꽑�깮: ");
		return s.nextInt();
	}
	
	public static boolean adminWork(Scanner s, 
		SerialPort serial) {
		switch (adminMenu(s)) {
		case MENU_TV_ON:
			System.out.println("TV 耳쒓린");
			try {
				serial.writeInt(CMD_TV_ON);
			} catch (SerialPortException e) {
				e.printStackTrace();
			}
			break;
		case MENU_TV_OFF:
			System.out.println("TV �걚湲�");
			try {
				serial.writeInt(CMD_TV_OFF);
			} catch (SerialPortException e) {
				e.printStackTrace();
			}
			break;
		case MENU_HEATER_ON:
			System.out.println("蹂댁씪�윭 媛��룞");
			try {
				serial.writeInt(CMD_HEATER_ON);
			} catch (SerialPortException e) {
				e.printStackTrace();
			}
			break;
		case MENU_CLEANER_ON:
			System.out.println("�꽭�긽湲� 媛��룞");
			try {
				serial.writeInt(CMD_CLEANER_ON);
			} catch (SerialPortException e) {
				e.printStackTrace();
			}
			break;
		case MENU_EMARGENCY:
			System.out.println("湲닿툒 �젙吏�");
			try {
				serial.closePort();
			} catch (SerialPortException e) {
				e.printStackTrace();
			}
			break;
		case MENU_ADMIN_LOGOUT:
			System.out.println("愿�由ъ옄 濡쒓렇 �븘�썐");
			return false;
		case MENU_ADMIN_EXIT:
			System.out.println("�봽濡쒓렇�옩 醫낅즺");
			s.close();
			System.exit(0);
		}
		return true;
	}
	
	public static boolean guestWork(Scanner s, 
			SerialPort serial) {
		switch (guestMenu(s)) {
		case MENU_TV_ON:
			System.out.println("TV 耳쒓린");
			break;
		case MENU_TV_OFF:
			System.out.println("TV �걚湲�");
			break;
		case MENU_HEATER_ON:
			System.out.println("蹂댁씪�윭 媛��룞");
			break;
		case MENU_CLEANER_ON:
			System.out.println("�꽭�긽湲� 媛��룞");
			break;
		case MENU_GUEST_LOGOUT:
			System.out.println("�궗�슜�옄 濡쒓렇 �븘�썐");
			return false;
		case MENU_GUEST_EXIT:
			System.out.println("�봽濡쒓렇�옩 醫낅즺");
			s.close();
			System.exit(0);
		}
		return true;
	}

	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);
		SerialPort serial = initSerial();
		while (true) {
			String mode = login(s);
			if (mode.equals(ADMIN_MODE)) {
				while (true) {
					if (adminWork(s, serial)==false) {
						break;
					}
				}
			}
			else if (mode.equals(GUEST_MODE)) {
				while (true) {
					if (!guestWork(s, serial)) {
						break;
					}
				}
			}
			else {
				System.out.println("ID �삉�뒗 鍮꾨쾲�씠 �옒紐삳릺�뿀�뒿�땲�떎.");
				System.out.println("�떎�떆 �엯�젰�븯�꽭�슂.");
			}
		}
	}

}



